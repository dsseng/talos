; Pod (CRI) containerd
(type pod_containerd_t)
(call client_p (pod_containerd_t))
(allow pod_containerd_t containerd_exec_t (file (entrypoint execute_no_trans)))
(allow init_t pod_containerd_t (process (transition)))

(type pod_containerd_socket_t)
(call system_socket_f (pod_containerd_socket_t))
(typetransition pod_containerd_t run_t sock_file pod_containerd_socket_t)

; FIXME: runc_cloned memfd execute permission

(allow pod_containerd_t self (user_namespace (create)))
(allow pod_containerd_t self (unix_stream_socket (connectto)))
(allow init_t pod_containerd_t (unix_stream_socket (connectto)))

(allow pod_containerd_t pod_p (process2 (nnp_transition nosuid_transition)))
(allow pod_containerd_t pod_p (process (transition)))
(allow pod_containerd_t self (key (view read write search link setattr create)))
(allow pod_containerd_t pod_p (key (view read write search link setattr create)))

(type pod_t)
(call pod_p (pod_t))
; TODO: What if container is started not from ephemeral_t?
(typetransition pod_containerd_t ephemeral_t process pod_t)
(allow pod_t ephemeral_t (file (entrypoint execute_no_trans)))

(type etcd_t)
(call pod_p (etcd_t))
; FIXME: insecure as anyone with access to the pod containerd may obtain this domain
(allow etcd_t ephemeral_t (file (entrypoint)))

(type etcd_pki_t)
(call protected_f (etcd_pki_t))
(allow etcd_pki_t tmpfs_t (filesystem (associate)))
; FIXME: constrain to only stuff for etcd
(allow etcd_t etcd_pki_t (fs_classes (ro)))

; access procfs
(allow pod_p any_p (fs_classes (ro)))
(allow pod_p any_p (process (
    getattr
    getcap
    getpgid
    getrlimit
    getsched
    getsession
)))
(allow pod_p sysfs_t (fs_classes (ro)))
(allow pod_p device_t (fs_classes (ro)))
(allow pod_p tun_device_t (fs_classes (rw)))

(allow pod_p pod_containerd_t (fd (use)))
(allow pod_p pod_containerd_t (fifo_file (open ioctl read write append)))

(allow pod_p self (unix_stream_socket (connectto)))

; kube-proxy demands
; TODO: specifically /proc/sys/net
(allow pod_p proc_sysctl_t (fs_classes (rw)))
; comm="loopback"
(allow pod_p nsfs_t (fs_classes (ro)))
; flannel
; FIXME: specifics, protect kubelet config with staic pods and other importants
(allow pod_p etc_t (fs_classes (rw)))
; flannel
(allow pod_p init_t (fd (use)))
; flannel
; FIXME: specifics
(allow pod_p run_t (fs_classes (rw)))
; used in networking
(allow pod_p kernel_t (fd (use)))
; kube-controller
(allow pod_p cgroup_t (fs_classes (ro)))
; TODO: add a boolean to disable this for extra hardening
(allow pod_p self (process (ptrace)))

(allow pod_p pod_containerd_t (netlink_classes (full)))
(allow pod_containerd_t pod_p (netlink_classes (full)))

(type kube_apiserver_config_t)
(call protected_f (kube_apiserver_config_t))
(allow kube_apiserver_config_t tmpfs_t (filesystem (associate)))
(type kube_scheduler_config_t)
(call protected_f (kube_scheduler_config_t))
(allow kube_scheduler_config_t tmpfs_t (filesystem (associate)))
(type kube_apiserver_secret_t)
(call protected_f (kube_apiserver_secret_t))
(allow kube_apiserver_secret_t tmpfs_t (filesystem (associate)))
(type kube_controller_manager_secret_t)
(call protected_f (kube_controller_manager_secret_t))
(allow kube_controller_manager_secret_t tmpfs_t (filesystem (associate)))
(type kube_scheduler_secret_t)
(call protected_f (kube_scheduler_secret_t))
(allow kube_scheduler_secret_t tmpfs_t (filesystem (associate)))

(typeattribute kube_secret_files)
(typeattributeset kube_secret_files kube_apiserver_config_t)
(typeattributeset kube_secret_files kube_scheduler_config_t)
(typeattributeset kube_secret_files kube_apiserver_secret_t)
(typeattributeset kube_secret_files kube_controller_manager_secret_t)
(typeattributeset kube_secret_files kube_scheduler_secret_t)

; FIXME: add context for kube services
(allow pod_p kube_secret_files (fs_classes (rw)))

; CNI and other plugins
(type cri_plugin_bin_t)
(call system_f (cri_plugin_bin_t))
(filecon "/opt/cni/bin(/.*)?" any (system_u object_r cri_plugin_bin_t (systemLow systemLow)))
(allow pod_containerd_t cri_plugin_bin_t (file (execute_no_trans)))
