(allow any_p self (fs_classes (ro)))
(allow any_p self (process (
    dyntransition
    execheap
    execmem
    execstack
    fork
    getattr
    getcap
    getpgid
    getrlimit
    getsched
    getsession
    noatsecure
    rlimitinh
    setcap
    setcurrent
    setexec
    setfscreate
    setkeycreate
    setpgid
    setrlimit
    setsched
    setsockcreate
    share
    sigchld
    siginh
    sigkill
    signal
    signull
    sigstop
    transition
)))
(allow any_p null_device_t (chr_file (ioctl read write getattr lock append open)))
(allow any_p sysfs_t (fs_classes (ro)))
(allow any_p proc_sysctl_t (fs_classes (ro)))
(allow any_p procfs_t (fs_classes (ro)))
(allow any_p device_t (fs_classes (ro)))
(allow any_p rootfs_t (fs_classes (ro)))

(allow system_p any_p (process (
    dyntransition
    execheap
    execmem
    execstack
    fork
    getattr
    getcap
    getpgid
    getrlimit
    getsched
    getsession
    noatsecure
    ptrace
    rlimitinh
    setcap
    setcurrent
    setexec
    setfscreate
    setkeycreate
    setpgid
    setrlimit
    setsched
    setsockcreate
    share
    sigchld
    siginh
    sigkill
    signal
    signull
    sigstop
    transition
)))

(allow system_p any_p (unix_stream_socket (connectto)))

(allow any_p self (fd (use)))
; Cilium and other tools use BPF
(allow any_p self (bpf (map_create map_read map_write prog_load prog_run)))
(allow any_p self (key (view read write search link setattr create)))
; TODO: abstract out with classmapping
(allow any_p self (sem (associate create destroy getattr read setattr unix_read unix_write write)))
(allow any_p self (msgq (
    associate create destroy getattr read setattr unix_read unix_write write
    enqueue
)))
(allow any_p self (msg (
    associate create destroy getattr read setattr unix_read unix_write write
    send receive
)))
(allow any_p self (shm (
    associate create destroy getattr read setattr unix_read unix_write write
    lock
)))
; TODO: restrict?
(allow any_p self (perf_event (open cpu kernel tracepoint read write)))
