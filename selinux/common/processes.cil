(allow any_processes self (fs_classes (ro)))
(allow any_processes self (process (
    dyntransition
    execheap
    execmem
    execstack
    fork
    getattr
    getcap
    getpgid
    getrlimit
    getsched
    getsession
    noatsecure
    ptrace
    rlimitinh
    setcap
    setcurrent
    setexec
    setfscreate
    setkeycreate
    setpgid
    setrlimit
    setsched
    setsockcreate
    share
    sigchld
    siginh
    sigkill
    signal
    signull
    sigstop
    transition
)))
(allow any_processes null_device_t (chr_file (ioctl read write getattr lock append open)))
(allow any_processes sysfs_t (fs_classes (ro)))
(allow any_processes proc_sysctl_t (fs_classes (ro)))
(allow any_processes procfs_t (fs_classes (ro)))
(allow any_processes device_t (fs_classes (ro)))
(allow any_processes rootfs_t (fs_classes (ro)))

(allow system_processes any_processes (process (
    dyntransition
    execheap
    execmem
    execstack
    fork
    getattr
    getcap
    getpgid
    getrlimit
    getsched
    getsession
    noatsecure
    ptrace
    rlimitinh
    setcap
    setcurrent
    setexec
    setfscreate
    setkeycreate
    setpgid
    setrlimit
    setsched
    setsockcreate
    share
    sigchld
    siginh
    sigkill
    signal
    signull
    sigstop
    transition
)))

(allow system_processes any_processes (unix_stream_socket (connectto)))

(allow any_processes self (fd (use)))
; Cilium and other tools use BPF
(allow any_processes self (bpf (map_create map_read map_write prog_load prog_run)))
(allow any_processes self (key (view read write search link setattr create)))
; TODO: abstract out with classmapping
(allow any_processes self (sem (associate create destroy getattr read setattr unix_read unix_write write)))
(allow any_processes self (msgq (
    associate create destroy getattr read setattr unix_read unix_write write
    enqueue
)))
(allow any_processes self (msg (
    associate create destroy getattr read setattr unix_read unix_write write
    send receive
)))
(allow any_processes self (shm (
    associate create destroy getattr read setattr unix_read unix_write write
    lock
)))
; TODO: restrict?
(allow any_processes self (perf_event (open cpu kernel tracepoint read write)))
